{"version":3,"sources":["components/cards/cards.module.css","components/cards/cards.component.jsx","api/index.js","components/chart/chart.component.jsx","components/countryPicker/CountryPicker.component.jsx","App.js","index.js","App.module.css","components/chart/chart.module.css","components/countryPicker/countryPicker.module.css","image/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","CardData","title","display","id","style","styles","infected","className","container","Grid","spacing","justify","map","info","key","item","component","Card","xs","md","cx","card","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","loading","url","fetchData","country","a","urlChanged","axios","get","console","log","fetchDailyData","modifiedData","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","apiCalled","fetchResponse","LineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","BarChart","option","legend","text","CountryPicker","handleCountryChange","getCountries","setGetCountries","apiCallCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","index","App","state","response","setState","this","image","src","Image","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.028da60f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__32sQS\",\"card\":\"cards_card__3pENt\",\"loading\":\"cards_loading__1Siq0\",\"infected\":\"cards_infected__2wHEJ\",\"recovered\":\"cards_recovered__2-m1P\",\"deaths\":\"cards_deaths__39ibc\"};","import React from \"react\";\r\n\r\nimport { Grid, Card, CardContent, Typography } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nimport styles from \"./cards.module.css\";\r\n\r\nconst Cards = ({ data: { confirmed, recovered, deaths, lastUpdate } }) => {\r\n  const CardData = [\r\n    {\r\n      title: \"Infected\",\r\n      data: confirmed,\r\n      display: \"Number of active cases of COVID-19\",\r\n      id: 1,\r\n      style: styles.infected,\r\n    },\r\n    {\r\n      title: \"Recovered\",\r\n      data: recovered,\r\n      display: \"Number of recoveries from COVID-19\",\r\n      id: 2,\r\n      style: styles.recovered,\r\n    },\r\n    {\r\n      title: \"Deaths\",\r\n      data: deaths,\r\n      display: \"Number of deaths caused by COVID-19\",\r\n      id: 3,\r\n      style: styles.deaths,\r\n    },\r\n  ];\r\n\r\n  return !confirmed ? (\r\n    <div className={styles.loading}>Loading Data...</div>\r\n  ) : (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justify=\"center\">\r\n        {CardData.map((info) => (\r\n          <Grid\r\n            key={info.id}\r\n            item\r\n            component={Card}\r\n            xs={12}\r\n            md={3}\r\n            className={cx(styles.card, `${info.style}`)}\r\n          >\r\n            <CardContent>\r\n              <Typography color=\"textSecondary\" gutterBottom>\r\n                {info.title}\r\n              </Typography>\r\n              <Typography variant=\"h5\">\r\n                <CountUp\r\n                  start={0}\r\n                  end={info.data.value}\r\n                  duration={2}\r\n                  separator={\",\"}\r\n                />\r\n              </Typography>\r\n              <Typography color=\"textSecondary\">\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n              <Typography variant=\"body2\">{info.display}</Typography>\r\n            </CardContent>\r\n          </Grid>\r\n        ))}\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import axios from 'axios'\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) => {\r\n\r\n    let urlChanged = url;\r\n\r\n    if (country) {\r\n        urlChanged = `${url}/countries/${country}`\r\n    }\r\n\r\n    try {\r\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(urlChanged)\r\n        return { confirmed, recovered, deaths, lastUpdate }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/daily`)\r\n\r\n        const modifiedData = data.map((dailyData) => ({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }))\r\n        return modifiedData\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n    try {\r\n        const { data } = await axios.get(`${url}/countries`);\r\n\r\n        return data.countries.map(country => country.name)\r\n    }\r\n    catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\n\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\n\r\nimport styles from \"./chart.module.css\";\r\nconst Chart = ({ data: { confirmed, deaths, recovered }, country }) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let apiCalled = false;\r\n    if (!apiCalled) {\r\n      const fetchResponse = async () => {\r\n        setDailyData(await fetchDailyData());\r\n      };\r\n      fetchResponse();\r\n      return () => {\r\n        apiCalled = true;\r\n      };\r\n    }\r\n  }, []);\r\n\r\n  const LineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            fill: \"origin\",\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255, 0, 0, 0.5)\",\r\n            fill: \"origin\",\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  const BarChart = confirmed ? (\r\n    <Bar\r\n      data={{\r\n        labels: [\"Infected\", \"Recovered\", \"Deaths\"],\r\n        datasets: [\r\n          {\r\n            label: \"People\",\r\n            backgroundColor: [\r\n              \"rgba(0, 0, 255, 0.5)\",\r\n              \"rgba(0, 255, 0, 0.5)\",\r\n              \"rgba(255, 0, 0, 0.5)\",\r\n            ],\r\n            data: [confirmed.value, recovered.value, deaths.value],\r\n          },\r\n        ],\r\n      }}\r\n      option={{\r\n        legend: { display: false },\r\n        title: { display: true, text: `Current state of ${country}` },\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return (\r\n    <div className={styles.container}>{country ? BarChart : LineChart}</div>\r\n  );\r\n};\r\n\r\nexport default Chart;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\n\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nimport styles from \"./countryPicker.module.css\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [getCountries, setGetCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const apiCallCountries = async () => {\r\n      setGetCountries(await fetchCountries());\r\n    };\r\n    apiCallCountries();\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect\r\n        defaultValue=\"\"\r\n        onChange={(e) => handleCountryChange(e.target.value)}\r\n      >\r\n        <option value=\"\">Global</option>\r\n        {getCountries.map((country, index) => (\r\n          <option key={index} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from 'react'\r\n\r\nimport styles from './App.module.css'\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport { fetchData } from './api';\r\n\r\nimport Image from './image/image.png';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        data: {},\r\n        country: \"\",\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const response = await fetchData();\r\n        this.setState({ data: response })\r\n    }\r\n\r\n    handleCountryChange = async (country) => {\r\n        const response = await fetchData(country);\r\n        this.setState({ data: response, country: country })\r\n    }\r\n\r\n    render() {\r\n        const { data, country } = this.state;\r\n        return (\r\n            <div className={styles.container} >\r\n                <img className={styles.image} src={Image} alt='Covid-19' />\r\n                <Cards data={data} />\r\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n                <Chart data={data} country={country} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__RhkeO\",\"image\":\"App_image__33Hck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"chart_container__1MQk-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"countryPicker_formControl__wIabF\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}